name: Build and Publish Release

on:
  release:
    types: ["created"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - uses: mr-smithers-excellent/docker-build-push@v6
        with:
          tags: latest,${{ github.sha }},${{ github.ref_name }}
          image: ui
          registry: ghcr.io
          directory: ./
          dockerfile: ./Dockerfile
          addLatest: false
          multiPlatform: true
          platform: linux/amd64,linux/arm64
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Generate static files
        run: pnpm generate

      - name: Zip client bundle
        run: zip -r client-bundle.zip .output/public

      - name: Upload client bundle to release
        uses: softprops/action-gh-release@v2
        with:
          files: client-bundle.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Updating config.json for not-th.re public
        run: >
          echo "{\"baseURL\": \"https://api.not-th.re/\", \"termsURL\":
          \"https://scolasti.co/go/privacy\"}" > .output/public/config.json

      - name: Upload client bundle to cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy .output/public/ --project-name=not-three --commit-dirty=true --branch=main
          packageManager: pnpm
